/*
 * Copyright 2022 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.mx.ymate.serv.annotation;

import java.lang.annotation.*;

/**
 * MxServConf generated By ModuleMojo on 2022/07/07 14:10
 *
 * @author YMP (https://www.ymate.net/)
 */
@Target(ElementType.TYPE)
@Retention(RetentionPolicy.RUNTIME)
@Documented
public @interface MxServConf {

    /**
     * @return 模块是否已启用, 默认值: true
     */
    boolean enabled() default true;


    /**
     * 获取服务名称
     *
     * @return 返回服务名称
     */
    String serverName() default "mxServer";

    /**
     * 获取主机名称或IP地址
     *
     * @return 返回主机名称或IP地址
     */
    String serverHost() default "0.0.0.0";

    /**
     * 获取服务监听端口
     *
     * @return 返回服务监听端口
     */
    int serverPort();

    /**
     * 获取字符编码
     *
     * @return 返回字符编码
     */
    String serverCharset();

    /**
     * 获取缓冲区大小
     *
     * @return 返回缓冲区大小
     */
    int serverBufferSize();

    /**
     * 获取执行线程数量，默认为 Runtime.getRuntime.availableProcessors
     *
     * @return 返回执行线程数量
     */
    int serverExecutorCount();

    /**
     * 获取空闲线程等待新任务的最长时间, 默认为 0
     *
     * @return 返回空闲线程等待新任务的最长时间
     */
    long serverKeepAliveTime() default 0;

    /**
     * 获取最大线程池大小，默认为 200
     *
     * @return 返回最大线程池大小
     */
    int serverThreadMaxPoolSize() default 200;

    /**
     * 获取线程队列大小，默认为 1024
     *
     * @return 返回线程队列大小
     */
    int serverThreadQueueSize() default 1024;

    /**
     * 获取选择器数量
     *
     * @return 返回选择器数量
     */
    int serverSelectorCount();

    /**
     * 获取 服务端自定义参数映射
     *
     * @return 返回服务端自定义参数映射
     */
    String serverParams();

    /**
     * 获取客户端名称
     *
     * @return 返回客户端名称
     */
    String clientName() default "mxClient";

    /**
     * 获取远程主机名称或IP地址
     *
     * @return 返回远程主机名称或IP地址
     */
    String clientRemoteHost();

    /**
     * 获取远程服务监听端口
     *
     * @return 返回远程服务监听端口
     */
    int clientPort();

    /**
     * 获取字符编码
     *
     * @return 返回字符编码
     */
    String clientCharset();

    /**
     * 获取缓冲区大小
     *
     * @return 返回缓冲区大小
     */
    int clientBufferSize();

    /**
     * 获取执行线程数量
     *
     * @return 返回执行线程数量
     */
    int clientExecutorCount();

    /**
     * 获取连接超时时间(秒)
     *
     * @return 返回连接超时时间
     */
    int clientConnectionTimeout();

    /**
     * 获取断线重连检测间隔(秒)
     *
     * @return 返回断线重连检测间隔
     */
    int clientReconnectionInterval();

    /**
     * 获取心跳包发送间隔(秒)
     *
     * @return 返回心跳包发送间隔
     */
    int clientHeartbeatInterval();

    /**
     * 获取客户端自定义参数映射
     *
     * @return 返回客户端自定义参数映射
     */
    String clientParams();

}
